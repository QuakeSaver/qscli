/*
 * QuakeSaver Frontend API
 *
 * This implements an API for the Frontend to communicate with the Backend.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GroupUpdate : A class to reflect a permission group.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GroupUpdate {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "owner_uid", skip_serializing_if = "Option::is_none")]
    pub owner_uid: Option<String>,
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    #[serde(rename = "is_active", skip_serializing_if = "Option::is_none")]
    pub is_active: Option<bool>,
    #[serde(rename = "influxdb_connection", skip_serializing_if = "Option::is_none")]
    pub influxdb_connection: Option<Box<models::InfluxDbConnectionUpdate>>,
    #[serde(rename = "color", skip_serializing_if = "Option::is_none")]
    pub color: Option<String>,
}

impl GroupUpdate {
    /// A class to reflect a permission group.
    pub fn new() -> GroupUpdate {
        GroupUpdate {
            name: None,
            owner_uid: None,
            comment: None,
            is_active: None,
            influxdb_connection: None,
            color: None,
        }
    }
}

