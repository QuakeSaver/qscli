/*
 * QuakeSaver Frontend API
 *
 * This implements an API for the Frontend to communicate with the Backend.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// DataProduct : Generic data product schema.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DataProduct {
    #[serde(rename = "persistent")]
    pub persistent: bool,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
    #[serde(rename = "sensor_uid")]
    pub sensor_uid: String,
    #[serde(rename = "uid")]
    pub uid: uuid::Uuid,
    #[serde(rename = "name")]
    pub name: String,
}

impl DataProduct {
    /// Generic data product schema.
    pub fn new(persistent: bool, sensor_uid: String, uid: uuid::Uuid, name: String) -> DataProduct {
        DataProduct {
            persistent,
            timestamp: None,
            sensor_uid,
            uid,
            name,
        }
    }
}

