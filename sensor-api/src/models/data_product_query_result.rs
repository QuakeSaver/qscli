/*
 * QuakeSaver Frontend API
 *
 * This implements an API for the Frontend to communicate with the Backend.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// DataProductQueryResult : A return schema for the data products endpoint including data and metadata.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DataProductQueryResult {
    #[serde(rename = "count")]
    pub count: i32,
    #[serde(rename = "ttl_seconds")]
    pub ttl_seconds: i32,
    #[serde(rename = "limit")]
    pub limit: i32,
    #[serde(rename = "skip")]
    pub skip: i32,
    #[serde(rename = "query_time_seconds")]
    pub query_time_seconds: f64,
    #[serde(rename = "data_products")]
    pub data_products: Vec<models::DataProduct>,
}

impl DataProductQueryResult {
    /// A return schema for the data products endpoint including data and metadata.
    pub fn new(count: i32, ttl_seconds: i32, limit: i32, skip: i32, query_time_seconds: f64, data_products: Vec<models::DataProduct>) -> DataProductQueryResult {
        DataProductQueryResult {
            count,
            ttl_seconds,
            limit,
            skip,
            query_time_seconds,
            data_products,
        }
    }
}

