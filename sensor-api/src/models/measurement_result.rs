/*
 * QuakeSaver Frontend API
 *
 * This implements an API for the Frontend to communicate with the Backend.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MeasurementResult : A return schema for the measurements endpoint including data and metadata.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MeasurementResult {
    #[serde(rename = "sensor_uid")]
    pub sensor_uid: String,
    #[serde(rename = "query_time_seconds")]
    pub query_time_seconds: f64,
    #[serde(rename = "query")]
    pub query: Box<models::MeasurementQuery>,
    #[serde(rename = "data")]
    pub data: Box<models::InfluxData>,
}

impl MeasurementResult {
    /// A return schema for the measurements endpoint including data and metadata.
    pub fn new(sensor_uid: String, query_time_seconds: f64, query: models::MeasurementQuery, data: models::InfluxData) -> MeasurementResult {
        MeasurementResult {
            sensor_uid,
            query_time_seconds,
            query: Box::new(query),
            data: Box::new(data),
        }
    }
}

