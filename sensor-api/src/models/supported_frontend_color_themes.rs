/*
 * QuakeSaver Frontend API
 *
 * This implements an API for the Frontend to communicate with the Backend.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SupportedFrontendColorThemes : Color schemes (themes), that can be used in the frontend.
/// Color schemes (themes), that can be used in the frontend.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SupportedFrontendColorThemes {
    #[serde(rename = "naive_light")]
    NaiveLight,
    #[serde(rename = "naive_dark")]
    NaiveDark,
    #[serde(rename = "qs_light")]
    QsLight,
    #[serde(rename = "qs_dark")]
    QsDark,

}

impl std::fmt::Display for SupportedFrontendColorThemes {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::NaiveLight => write!(f, "naive_light"),
            Self::NaiveDark => write!(f, "naive_dark"),
            Self::QsLight => write!(f, "qs_light"),
            Self::QsDark => write!(f, "qs_dark"),
        }
    }
}

impl Default for SupportedFrontendColorThemes {
    fn default() -> SupportedFrontendColorThemes {
        Self::NaiveLight
    }
}

