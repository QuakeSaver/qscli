/*
 * QuakeSaver Frontend API
 *
 * This implements an API for the Frontend to communicate with the Backend.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SensorListResponse : Schema for a list of sensors.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SensorListResponse {
    #[serde(rename = "sensor_count")]
    pub sensor_count: i32,
    #[serde(rename = "limit")]
    pub limit: i32,
    #[serde(rename = "skip")]
    pub skip: i32,
    #[serde(rename = "query_duration")]
    pub query_duration: f64,
    #[serde(rename = "included_modules", skip_serializing_if = "Option::is_none")]
    pub included_modules: Option<Vec<String>>,
    #[serde(rename = "sensors")]
    pub sensors: std::collections::HashMap<String, models::Sensor>,
}

impl SensorListResponse {
    /// Schema for a list of sensors.
    pub fn new(sensor_count: i32, limit: i32, skip: i32, query_duration: f64, sensors: std::collections::HashMap<String, models::Sensor>) -> SensorListResponse {
        SensorListResponse {
            sensor_count,
            limit,
            skip,
            query_duration,
            included_modules: None,
            sensors,
        }
    }
}

